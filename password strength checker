using System;
using System.IO;

class Program
{
    static int PassStrength;
    static string[] lines = new string();// help
    static void Main(string[] args)
    {
        bool repeat;
         while (repeat = true) 
        {
            string Path_to_input = "C:\\ProgramData\\PasswordManagerApp\\Resources\\StrenghtChecker\\input.txt";
            string Path_to_output = "C:\\ProgramData\\PasswordManagerApp\\Resources\\StrenghtChecker\\output.txt";

            try
            {
                // Read the input file where the password is stored
                string[] lines = File.ReadAllLines(Path_to_input);
            }
            catch (Exception ex)
            {
                Console.WriteLine("An error occurred: " + ex.Message);
            }
            CheckPasswordStrength(lines[0]);

            if (PassStrength == 0)
            {
                repeat = false;
            }
            if (PassStrength == 1)
            {
                Console.WriteLine("colour is red");
            }
            if (PassStrength == 2)
            {
                Console.WriteLine("colour is amber");
            }
            if (PassStrength == 3)
            {
                Console.WriteLine("colour is green");
            }
        }
       
    }


    static int CheckPasswordStrength(string lines)
    {
        // Check for at least 12 characters
        if (lines.Length >= 12)
        {
            PassStrength++;
        }
        else
        {
            Console.WriteLine("Password should be at least 12 characters long.");


        }
        // Check for at least one special character
        if (lines.Any(c => !char.IsLetterOrDigit(c)))
        {
            PassStrength++;
        }
        else
        {
            Console.WriteLine("Password should contain at least one special character.");

        }
         // Check for at least one digit
         if (lines.Any(char.IsDigit))
         {
            PassStrength++;
         }
         else
            {
                Console.WriteLine("Password should contain at least one digit.");
                
            }

            return PassStrength;
        }
    }
